server:
  port: 19085
  servlet :
    context-path : /study
spring:
  # 下面是配置undertow作为服务器的参数
#  undertow:
#    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
#    io-threads: 4
#    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
#    worker-threads: 20
#    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
#    # 每块buffer的空间大小,越小的空间被利用越充分
#    buffer-size: 1024
#    # 是否分配的直接内存
#    direct-buffers: true

#这个指定数据源的方法和改变pom配置效果是一样的，二者都可实现数据源切换
#对于这4种数据源，当 classpath 下有相应的类存在时，Springboot 会通过自动配置为其生成DataSource Bean，DataSource Bean默认只会生成一个，四种数据源类型的生效先后顺序如下：Tomcat--> Hikari --> Dbcp --> Dbcp2 。
# spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
# spring.datasource.type=org.apache.commons.dbcp.BasicDataSource
# spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
  datasource:
    primary:
      url: jdbc:postgresql://192.168.154.26:15423/track_manage?characterEncoding=UTF-8&allowMultiQueries=true
      username: postgres
      password: cennavi_bzk
      driver-class-name: org.postgresql.Driver
      hikari:
        connection-test-query: SELECT 1 FROM DUAL
        connection-timeout: 600000
        maximum-pool-size: 500
        max-lifetime: 1800000
        minimum-idle: 20
        validation-timeout: 3000
        idle-timeout: 60000


    secondary:
      url: jdbc:postgresql://192.168.154.26:15423/track_manage?characterEncoding=UTF-8&allowMultiQueries=true
      username: postgres
      password: cennavi_bzk
      driver-class-name: org.postgresql.Driver

      hikari:
        connection-test-query: SELECT 1 FROM DUAL
        minimum-idle: 1
        maximum-pool-size: 5
        max-lifetime: 1800000

    third:
      url: jdbc:postgresql://192.168.153.14:5440/test1
      username: postgres
      password: datahive@2019!
      driver-class-name: org.postgresql.Driver

      hikari:
        connection-test-query: SELECT 1 FROM DUAL
        minimum-idle: 1
        maximum-pool-size: 5
        max-lifetime: 1800000
  #redis配置
  redis:
    database: 8
    host: 127.0.0.1
    port: 6379

# ES
#开启 Elasticsearch 仓库(默认值:true)
  data:
    elasticsearch:
      repositories:
        enabled: true
#默认 9300 是 Java 客户端的端口。9200 是支持 Restful HTTP 的接口 #spring.data.elasticsearch.cluster-nodes 集群节点地址列表，用逗号分隔。如果没有指定，就启动一个客户端节点
      cluster-nodes: 192.168.154.22:9300
#spring.data.elasticsearch.cluster-name Elasticsearch 集群名(默认值: elasticsearch)
      cluster-name: elasticsearch
#spring.data.elasticsearch.propertie 用来配置客户端的额外属性
#存储索引的位置
#      properties:
#        path:
#          home: /APP/yndzk/elasticsearch-6.5.4/data
#连接超时的时间
      transport:
        tcp:
          connect_timeout: 120s

  servlet:
    multipart:
       enabled: true
       max-file-size: 10000000000
       max-request-size: 100000000000

swagger:
  enabled: true
  host: 127.0.0.1


